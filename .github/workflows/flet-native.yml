# .github/workflows/build-windows.yml
name: Build Flet App for Windows
# Set PYTHONUTF8=1 to force Python's standard streams to use UTF-8,
# preventing UnicodeEncodeError with rich library on Windows CI.
env:
  PYTHONUTF8: "1"
on:
  push:
    branches: [ "main" ] # Trigger on pushes to the main branch
    paths:
      - 'ytstampy-daliah/**' # Only run if files in the app directory change
  workflow_dispatch: # Allow manual triggering from the Actions tab

jobs:
  build-windows:
    runs-on: windows-latest # Use a Windows runner

    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Flet requires >= 3.9

    - name: Install Flet CLI
      run: pip install flet pyinstaller

    - name: Install app dependencies
      run: pip install -r requirements.txt

    # Install FFmpeg using Chocolatey
    - name: Install Chocolatey and FFmpeg
      uses: crazy-max/ghaction-chocolatey@v3
      with:
        # Installs ffmpeg system-wide on the runner
        args: install ffmpeg -y --no-progress

    # Dependencies listed in pyproject.toml [project].dependencies
    # will be installed automatically by 'flet build'. No separate pip install needed here.
    # We manually install from requirements.txt above just in case.

    - name: Prepare assets directory
      shell: bash
      run: |
        mkdir -p assets
        cp "C:/ProgramData/chocolatey/bin/ffmpeg.exe" assets/ffmpeg.exe

    - name: Build Flet Windows App
      # Use bash shell
      shell: bash
      # Run flet build from the repository root ('.').
      # Place the output in 'build/windows' relative to the root.
      # ffmpeg.exe will be automatically included from the 'assets' directory.
      run: flet build windows . --output build/windows

    - name: Upload Windows Build Artifact
      # Upload the contents of the build output directory as an artifact.
      uses: actions/upload-artifact@v4
      with:
        name: ytstampy-windows-build # Name for the downloadable zip file
        # Use relative path from workspace root
        path: build/windows/ # The directory containing the built application
